version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://user:password@db:5432/python_learning_platform
      - CODE_SANDBOX_URL=http://code-sandbox:5001
    depends_on:
      - db
#      - code-sandbox
    volumes:
      - ./backend:/app
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:5000/api
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.vite 
    depends_on:
      - backend
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

#  code-sandbox:
#    build: ./code-sandbox
#    ports:
#      - "5001:5001"
#    environment:
#      - PYTHONUNBUFFERED=1
#    volumes:
#      - ./code-sandbox:/app
#    networks:
#      - app-network
#    # Add security options
#    cap_drop:
#      - ALL
#    cap_add:
#      - NET_BIND_SERVICE
#    security_opt:
#      - no-new-privileges:true

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=python_learning_platform
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

#  pgadmin:
#    image: dpage/pgadmin4:8.1
#    container_name: pgadmin
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@example.com
#      PGADMIN_DEFAULT_PASSWORD: admin
#    ports:
#      - 8080:80
#    networks:
#      - app-network 

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 